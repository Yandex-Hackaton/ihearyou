version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ihearyou_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ihearyou_network

  admin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ihearyou_admin
    environment:
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_CONN_STRING: ${POSTGRES_CONN_STRING}
      BOT_TOKEN: ${BOT_TOKEN}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    command: ["poetry", "run", "uvicorn", "data.admin_panel:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - ihearyou_network
    restart: unless-stopped

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ihearyou_bot
    environment:
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_CONN_STRING: ${POSTGRES_CONN_STRING}
      BOT_TOKEN: ${BOT_TOKEN}
      ADMINS: ${ADMINS}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    command: ["poetry", "run", "python", "aiogram_run.py"]
    networks:
      - ihearyou_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  ihearyou_network:
    driver: bridge