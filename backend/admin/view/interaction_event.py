from data.models import InteractionEvent
from admin.base import CustomModelView


class InteractionEventView(CustomModelView, model=InteractionEvent):
    """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å–æ–±—ã—Ç–∏–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º."""

    name = '–°–æ–±—ã—Ç–∏–µ'
    name_plural = '–°–æ–±—ã—Ç–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π'
    icon = "fa-solid fa-chart-line"

    # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ - —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ
    can_create = False
    can_edit = False
    can_delete = False
    can_view_details = True

    # –ù–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π
    column_labels = {
        InteractionEvent.id: 'ID',
        InteractionEvent.event_type: '–¢–∏–ø —Å–æ–±—ã—Ç–∏—è',
        InteractionEvent.user_id: 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        InteractionEvent.username: 'Username',
        InteractionEvent.message_text: '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è',
        InteractionEvent.callback_data: '–î–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏',
        InteractionEvent.created_at: '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è',
    }

    # –°–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    column_list = [
        InteractionEvent.created_at,
        InteractionEvent.event_type,
        InteractionEvent.username,
        InteractionEvent.user_id,
        InteractionEvent.message_text,
        InteractionEvent.callback_data,
    ]

    # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    column_details_list = [
        InteractionEvent.id,
        InteractionEvent.event_type,
        InteractionEvent.user_id,
        InteractionEvent.username,
        InteractionEvent.message_text,
        InteractionEvent.callback_data,
        InteractionEvent.created_at,
    ]

    # –ü–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
    column_searchable_list = [
        InteractionEvent.username,
        InteractionEvent.message_text,
        InteractionEvent.callback_data,
    ]

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    column_sortable_list = [
        InteractionEvent.created_at,
        InteractionEvent.event_type,
        InteractionEvent.user_id,
    ]

    # –§–∏–ª—å—Ç—Ä—ã (–æ—Ç–∫–ª—é—á–µ–Ω—ã –∏–∑-–∑–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Ç–∏–ø–æ–≤ —Å SQLAdmin)
    # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤–º–µ—Å—Ç–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    column_filters = []

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    page_size = 50
    page_size_options = [25, 50, 100, 200]

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    column_default_sort = [(InteractionEvent.created_at, True)]

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
    @staticmethod
    def format_datetime(model, attribute):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏."""
        return model.created_at.strftime("%d.%m.%Y %H:%M:%S")

    @staticmethod
    def format_event_type(model, attribute):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è."""
        event_map = {
            "message": "üìù –°–æ–æ–±—â–µ–Ω–∏–µ",
            "callback_query": "üîò –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏",
        }
        return event_map.get(str(model.event_type), str(model.event_type))

    @staticmethod
    def format_user(model, attribute):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        if model.username:
            return f"@{model.username} ({model.user_id})"
        return f"ID: {model.user_id}"

    @staticmethod
    def format_message(model, attribute):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        if not model.message_text:
            return "‚Äî"
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ
        if len(model.message_text) > 50:
            return model.message_text[:47] + "..."
        return model.message_text

    @staticmethod
    def format_callback(model, attribute):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ callback –¥–∞–Ω–Ω—ã—Ö."""
        if not model.callback_data:
            return "‚Äî"
        return model.callback_data

    column_formatters = {
        InteractionEvent.created_at: format_datetime,
        InteractionEvent.event_type: format_event_type,
        InteractionEvent.message_text: format_message,
        InteractionEvent.callback_data: format_callback,
    }

    column_formatters_detail = {
        InteractionEvent.created_at: format_datetime,
        InteractionEvent.event_type: format_event_type,
    }

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±—É–¥—É—â–µ–º)
    async def get_count_query(self, request):
        """–ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞."""
        return await super().get_count_query(request)
