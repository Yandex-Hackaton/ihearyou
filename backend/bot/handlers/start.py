import logging

from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from ..keyboards.main_menu import (
    get_main_menu_keyboard,
    get_main_reply_keyboard,
    get_admin_reply_keyboard
)
from ..config import ADMINS
from ..keyboards.callbacks import UserStates
from data.db import get_session

logger = logging.getLogger(__name__)
start_router = Router()


@start_router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    logger.info(
        f"User started: {message.from_user.id} " f"(@{message.from_user.username})"
    )
    await state.set_state(UserStates.MAIN_MENU)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if message.from_user.id in ADMINS:
        await message.answer(
            text=(
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º."
            ),
            reply_markup=await get_admin_reply_keyboard()
        )
    else:
        await message.answer(
            text=(
                "–î–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Ç–µ–º—É.\n"
                "–ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥—ë—à—å –ø–æ–¥—Ö–æ–¥—è—â—É—é, –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, "
                "–∞ –º—ã –ø–æ–º–æ–∂–µ–º —Å –æ—Ç–≤–µ—Ç–æ–º)"
            ), 
            reply_markup=await get_main_reply_keyboard()
        )
        async with get_session() as session:
            inline_keyboard = await get_main_menu_keyboard(session)
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:",
                reply_markup=inline_keyboard
            )


@start_router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    logger.info(f"Help requested: {message.from_user.id}")

    await message.answer(
        "‚ÑπÔ∏è –ü–æ–º–æ—â—å\n\n"
        " /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "–¢–∞–∫ –∂–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º."
    )


@start_router.message(lambda message: message.text == "üóí –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
async def handle_useful_materials(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'"""
    logger.info(f"Useful materials requested: {message.from_user.id}")
    
    text = (
        "<b>üìö –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</b>\n\n"
        '<a href="https://www.ihearyou.ru">–ù–∞—à —Å–∞–π—Ç</a>\n\n'
        '<a href="https://—è—Ç–µ–±—è—Å–ª—ã—à—É.—Ä—Ñ/ihearyouclub">–ö–ª—É–± "–Ø —Ç–µ–±—è —Å–ª—ã—à—É"</a>\n\n'
        '<a href="https://vk.com/ihear_you">VK</a>\n'
        '<a href="https://dzen.ru/ihearyou">–î–∑–µ–Ω</a>\n\n'
        "<b>–ü–æ–¥–∫–∞—Å—Ç \"–ù–µ –ø–æ–Ω–∞—Å–ª—ã—à–∫–µ\":</b>\n"
        '<a href="https://podcasts.apple.com/ru/podcast/–Ω–µ-–ø–æ–Ω–∞—Å–ª—ã—à–∫–µ/id1530818421">–ü–æ–¥–∫–∞—Å—Ç—ã Apple</a>\n'
        '<a href="https://music.yandex.ru/album/12068742">–Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞</a>'
    )
    
    await message.answer(
        text,
        parse_mode="HTML",
        disable_web_page_preview=True
    )
