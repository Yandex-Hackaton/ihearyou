from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup
)
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession
from sqlmodel import select

from data.models import Content, Category
from .callbacks import (
    AdminCallback,
    ButtonCallback,
    CategoryCallback,
    FeedbackCallback,
    GoToMainMenuCallback,
    RatingCallback
)


async def add_back_to_main_menu_button(builder: InlineKeyboardBuilder) -> None:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é".
    """
    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é",
        callback_data=GoToMainMenuCallback().pack()
    )


async def get_main_menu_keyboard(
        session: AsyncSession) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –¥–≤—É–º—è –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏–∑ –ë–î.
    """
    builder = InlineKeyboardBuilder()
    query = select(Category)
    result = await session.execute(query)
    categories = result.scalars().all()
    for category in categories:
        builder.button(
            text=category.title,
            callback_data=CategoryCallback(category_id=category.id).pack(),
        )
    builder.adjust(1)
    return builder.as_markup()


async def get_category_buttons_keyboard(
    category_id: int, session: AsyncSession
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    """
    builder = InlineKeyboardBuilder()
    try:
        query = select(Content).where(Content.category_id == category_id)
        result = await session.execute(query)
        buttons = result.scalars().all()

        for button in buttons:
            builder.button(
                text=button.title,
                callback_data=ButtonCallback(button_id=button.id).pack(),
            )

        builder.button(
            text="üîô –ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é",
            callback_data=GoToMainMenuCallback().pack()
        )
        builder.adjust(1)

    except Exception:
        builder.button(
            text="‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö",
            callback_data=GoToMainMenuCallback().pack(),
        )
        builder.adjust(1)

    return builder.as_markup()


async def get_main_reply_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç —Ä–µ–ø–ª–∞–π-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ ¬´–ü–æ–º–æ—â—å¬ª,
    ¬´–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å¬ª –∏ –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã¬ª
    """
    builder = ReplyKeyboardBuilder()
    builder.button(text="ü§ù –ü–æ–º–æ—â—å")
    builder.button(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    builder.button(text="üóí –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
    builder.button(text="‚úÖ –ö –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)


async def get_admin_reply_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç —Ä–µ–ø–ª–∞–π-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏:
    - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    - –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    """
    builder = ReplyKeyboardBuilder()
    builder.button(text="üîó –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")
    builder.button(text="üì¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)


async def get_admin_inline_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏:
    - –ö –≤–æ–ø—Ä–æ—Å–∞–º
    - –ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚ùì –ö –≤–æ–ø—Ä–æ—Å–∞–º",
        url="https://stepaxvii.ru/admin/question/list"
    )
    builder.button(
        text="üìä –ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ",
        url="https://stepaxvii.ru/admin/interactionevent/list"
    )
    builder.adjust(1)
    return builder.as_markup()


async def get_reminder_type_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–û—Ç –±–æ—Ç–∞",
        callback_data=AdminCallback(
            action="send_reminder",
            question_id=None,
            reminder_type="bot"
        ).pack()
    )
    builder.button(
        text="–û—Ç –ê—É—Ä–∏",
        callback_data=AdminCallback(
            action="send_reminder",
            question_id=None,
            reminder_type="auri"
        ).pack()
    )
    builder.button(
        text="–û—Ç–º–µ–Ω–∞",
        callback_data=AdminCallback(
            action="cancel",
            question_id=None,
            reminder_type=None
        ).pack()
    )
    builder.adjust(1)
    return builder.as_markup()


async def get_admin_answer_keyboard(question_id: int) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ '–û—Ç–≤–µ—Ç–∏—Ç—å' –¥–ª—è –∞–¥–º–∏–Ω–∞."""
    builder = InlineKeyboardBuilder()
    builder.button(
            text="–û—Ç–≤–µ—Ç–∏—Ç—å",
            callback_data=AdminCallback(
                action="answer_question",
                question_id=question_id,
                reminder_type=None
            ).pack()
    )
    builder.adjust(1)
    return builder.as_markup()


def get_feedback_keyboard(
        content_id: int,
        category_id: int
        ) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
    """
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="–ë—ã–ª–æ –ø–æ–ª–µ–∑–Ω–æ üëç",
            callback_data=FeedbackCallback(
                action="helpful",
                content_id=content_id).pack()
        ),
        InlineKeyboardButton(
            text="–ù–µ –ø–æ–º–æ–≥–ª–æ üëé",
            callback_data=FeedbackCallback(
                action="unhelpful",
                content_id=content_id).pack()
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥",
            callback_data=CategoryCallback(
                category_id=category_id).pack()
        )
    )
    return builder.as_markup()


def get_rating_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –æ—Ç 1 –¥–æ 5."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="5 ‚≠ê",
        callback_data=RatingCallback(rating=5).pack()
    )
    builder.button(
        text="4 ‚≠ê",
        callback_data=RatingCallback(rating=5).pack()
    )
    builder.button(
        text="3 ‚≠ê",
        callback_data=RatingCallback(rating=5).pack()
    )
    builder.button(
        text="2 ‚≠ê",
        callback_data=RatingCallback(rating=5).pack()
    )
    builder.button(
        text="1 ‚≠ê",
        callback_data=RatingCallback(rating=5).pack()
    )
    builder.adjust(5)
    return builder.as_markup()
